swagger: "2.0"
info:
  version: "1.0.0"
  title: 'CQUBE'

basePath: "/v0"

tags:
  - name: "spec"
  - name: "ingestion"

schemes:
  - "https"
  - "http"

paths:
  /spec/event:
    post:
      tags:
        - "spec"
      summary: "Create a new event Specification"
      description: "Add new event Specification"
      operationId: "eventSpecification"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            example:
              {
    "ingestion_type": "event",
    "event_name": "student_attendance",
    "input": {
        "type": "object",
        "properties": {
            "event_name": {
                "type": "string"
            },
            "event": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "type": "string",
                            "shouldNotNull": true,
                            "format":"date"
                        },
                        "school_id": {
                            "type": "number",
                            "shouldNotNull": true,
                            "pattern":"^[0-9]{10}$"
                        },
                        "grade": {
                            "type": "number",
                            "shouldNotNull": true,
                            "minimum":1,
                            "maximum":12
                        },
                        "total_students": {
                            "type": "number",
                            "shouldNotNull": true
                        },
                        "students_attendance_marked": {
                            "type": "number",
                            "shouldNotNull": true
                        }
                    },
                    "required": [
                        "date",
                        "school_id",
                        "grade",
                        "total_students",
                        "students_attendance_marked"
                    ]
                }
            }
        },
        "required": [
            "event_name",
            "event"
        ]
    }
}
      responses:
        200:
          description: "Event Spec Created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Event Spec Created Successfully"
              pid:
                type: "integer"
                example: 1
              event_name:
                type: "string"
                example: "student_count"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/dimension:
    post:
      tags:
        - "spec"
      summary: "Create a new dimension Specification"
      description: "Add new dimension Specification"
      operationId: "dimensionSpecification"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            example: {
    "ingestion_type": "dimension",
    "dimension_name": "dimension",
    "input": {
        "type": "object",
        "properties": {
            "dimension_name": {
                "type": "string"
            },
            "dimension": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "school_id": {
                            "type": "number",
                            "shouldNotNull": true,
                            "pattern":"^[0-9]{10}$"
                        },
                        "school_name": {
                            "type": "string",
                            "shouldNotNull": true
                        },
                        "cluster_id": {
                            "type": "number",
                            "shouldNotNull": true,
                            "pattern":"^[0-9]{9}$"
                        },
                        "cluster_name": {
                            "type": "string",
                            "shouldNotNull": true
                        },
                        "block_id": {
                            "type": "number",
                            "shouldNotNull": true,
                            "pattern":"^[0-9]{5}$"
                        },
                        "block_name": {
                            "type": "string",
                            "shouldNotNull": true
                        },
                        "district_id": {
                            "type": "number",
                            "shouldNotNull": true,
                            "pattern":"^[0-9]{3}$"
                        },
                        "district_name": {
                            "type": "string",
                            "shouldNotNull": true
                        },
                        "state_id": {
                            "type": "number",
                            "shouldNotNull": true,
                            "pattern":"^[0-9]{2}$"
                        },
                        "state_name": {
                            "type": "string",
                            "shouldNotNull": true
                        }
                    },
                    "required": [
                        "school_id",
                        "school_name",
                        "cluster_id",
                        "cluster_name",
                        "block_id",
                        "block_name",
                        "district_id",
                        "district_name",
                        "state_id",
                        "state_name"
                    ]
                }
            }
        },
        "required": [
            "dimension_name",
            "dimension"
        ]
    }
}

      responses:
        200:
          description: "Dimension Spec Created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dimension Spec Created Successfully"
              pid:
                type: "integer"
                example: 4
              dimension_name:
                type: "string"
                example: "district"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/dataset:
    post:
      tags:
        - "spec"
      summary: "Create a new dataset Specification"
      description: "Add new dataset Specification"
      operationId: "datasetSpecification"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
           example: {
    "ingestion_type": "dataset",
    "dataset_name": "student_attendance_by_class",
    "input": {
        "type": "object",
        "properties": {
            "dataset_name": {
                "type": "string"
            },
            "dimensions": {
                "type": "object",
                "properties": {
                    "table": {
                        "type": "object",
                        "properties": {
                            "ingestion.student_attendance": {
                                "type": "string"
                            }
                        }
                    },
                    "column": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "school_id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "merge_on_col": {
                        "type": "object",
                        "properties": {
                            "school_id": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "dataset": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "shouldNotNull": true,
                                    "format":"date"
                                },
                                "school_id": {
                                    "type": "number",
                                    "shouldNotNull": true,
                                    "pattern":"^[0-9]{10}$"
                                },
                                "grade": {
                                    "type": "number",
                                    "shouldNotNull": true,
                                    "minimum":1,
                                    "maximum":12
                                },
                                "count": {
                                    "type": "number",
                                    "shouldNotNull": true
                                },
                                "sum": {
                                    "type": "number",
                                    "shouldNotNull": true
                                },
                                "percentage": {
                                    "type": "number",
                                    "shouldNotNull": true
                                }
                            },
                            "required": [
                                "date",
                                "school_id",
                                "grade",
                                "count",
                                "sum",
                                "percentage"
                            ]
                        }
                    },
                    "group_by": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string"
                                },
                                "school_id": {
                                    "type": "string"
                                },
                                "grade": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "date",
                                "school_id",
                                "grade"
                            ]
                        }
                    },
                    "aggregate": {
                        "type": "object",
                        "properties": {
                            "function": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "sum": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "target_table": {
                                "type": "object",
                                "properties": {
                                    "ingestion.student_attendance_by_class": {
                                        "type": "string"
                                    }
                                }
                            },
                            "update_cols": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "sum": {
                                            "type": "number"
                                        },
                                        "count": {
                                            "type": "number"
                                        },
                                        "percentage": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "columns": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "column": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "students_attendance_marked": {
                                                        "type": "string"
                                                    },
                                                    "total_students": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "required": [
                            "function",
                            "target_table",
                            "columns",
                            "update_cols"
                        ]
                    }
                },
                "required": [
                    "items",
                    "group_by",
                    "aggregate"
                ]
            }
        },
        "required": [
            "dataset_name",
            "dimensions",
            "dataset"
        ]
    }
}
      responses:
        200:
          description: "Dataset Spec Created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dataset Spec Created Successfully"
              pid:
                type: "integer"
                example: 3
              dataset_name:
                type: "string"
                example: "student_count"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/transformer:
    post:
      tags:
        - "spec"
      summary: "Create a new transformer Specification"
      description: "Add new transformer Specification"
      operationId: "transformerSpecification"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              event_name:
                type: "string"
                example: "student_count"
              dataset_name:
                type: "string"
                example: "student_count"
              transformer_type:
                type: "string"
                example: "event_to_dataset"
              template:
                type: "string"
                example: "sum_template"
      responses:
        200:
          description: "Transformer Spec Created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Transformer Spec Created Successfully"
              pid:
                type: "integer"
                example: 5
              file:
                type: "string"
                example: "student_count.py"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/pipeline:
    post:
      tags:
        - "spec"
      summary: "Create a new pipeline Specification"
      description: "Add new pipeline Specification"
      operationId: "pipelineSpecification"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              pipeline_name:
                type: "string"
                example: "student_count_pipe"
              pipeline:
                type: "array"
                items:
                  type: "object"
                  properties:
                    event_name:
                      type: "string"
                      example: "student_count"
                    dataset_name:
                      type: "string"
                      example: "student_count_by_school_and_grade"
                    dimension_name:
                      type: "string"
                      example: "district"
                    transformer_name:
                      type: "string"
                      example: "student_count_sum_transformer"

      responses:
        200:
          description: "Pipe Spec Created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Pipe Spec Created Successfully"
              pid:
                type: "integer"
                example: 2

        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/schedule:
    post:
      tags:
        - "spec"
      summary: "create a Schedule"
      description: "Create a schedule"
      operationId: "createSchedule"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              pipeline_name:
                type: "string"
                example: "student_count_pipe"
              schedule_type:
                type: "string"
                example: "dimension_to_db/ingest_to_aggregate/aggregate_to_dataset"
              scheduled_at:
                type: "string"
                example: "12/12/2022 14:00:00"

      responses:
        200:
          description: "Schedule created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Schedule created Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"

  /ingestion/event:
    post:
      tags:
        - "ingestion"
      summary: "Add Event into a CSV"
      description: "Add event"
      operationId: "addEvent"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              event_name:
                type: "string"
                example: "student_count"
              event:
                type: "array"
                items:
                  type: "object"
                  properties:
                    school_id:
                      type: "string"
                      example: "101"
                    grade:
                      type: "string"
                      example: "1"
                    count:
                      type: "string"
                      example: "10"
      responses:
        200:
          description: "Event Added Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Event Added Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/dimension:
    post:
      tags:
        - "ingestion"
      summary: "Add dimension into CSV"
      description: "Add dimension"
      operationId: "addDimension"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              dimension_name:
                type: "string"
                example: "district"
              dimension:
                type: "array"
                items:
                  type: "object"
                  properties:
                    name:
                      type: "string"
                      example: "Shimla"
                    district_id:
                      type: "string"
                      example: "SH123"
      responses:
        200:
          description: "Dimension Added Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dimension Added Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/dataset:
    post:
      tags:
        - "ingestion"
      summary: "Add dataset"
      description: "Add dataset"
      operationId: "addDataset"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              dataset_name:
                type: "string"
                example: "student_count_by_school_and_grade"
              dataset:
                  type: "object"
                  properties:
                    items:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          school_id:
                            type: "string"
                            example: "101"
                          grade:
                            type: "string"
                            example: "1"
                          student_count:
                            type: "string"
                            example: "10"
      responses:
        200:
          description: "Dataset Added Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dataset Added Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/pipeline:
    post:
      tags:
        - "ingestion"
      summary: "Trigger the pipeline"
      description: "Trigger the pipeline"
      operationId: "triggerPipeline"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              pipeline_name:
                type: "string"
                example: "student_count_pipe"
              type:
                type: "string"
                example: "dimension_to_db/ingest_to_aggregate/aggregate_to_dataset"
      responses:
        200:
          description: "Pipeline Triggered Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Pipeline Triggered Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/csv:
    post:
      tags:
        - "ingestion"
      summary: "CSV Import"
      description: "CSV Import"
      operationId: "csvImport"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: "formData"
          name: "body"
          type: file
          required: true
        - in: "formData"
          name: "ingestion_type"
          type: string
          required: true
        - in: "formData"
          name: "ingestion_name"
          type: string
          required: true

      responses:
        200:
          description: "Pipeline Triggered Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Pipeline Triggered Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"

definitions:
  generic_error:
      type: "object"
      properties:
        message:
          type: "string"
          example: "Invalid Input"